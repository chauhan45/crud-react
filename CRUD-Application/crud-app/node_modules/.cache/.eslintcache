[{"/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/index.js":"1","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/reportWebVitals.js":"2","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/App.js":"3","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/AllUsers.jsx":"4","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/AddUser.jsx":"5","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/EditUser.jsx":"6","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/NavBar.jsx":"7","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/CodeForInterview.jsx":"8","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/NotFound.jsx":"9","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Service/api.js":"10"},{"size":500,"mtime":1640676351594,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1640676351594,"results":"13","hashOfConfig":"12"},{"size":768,"mtime":1640676351590,"results":"14","hashOfConfig":"12"},{"size":2497,"mtime":1640678212197,"results":"15","hashOfConfig":"12"},{"size":2186,"mtime":1640688984022,"results":"16","hashOfConfig":"12"},{"size":2577,"mtime":1640676351594,"results":"17","hashOfConfig":"12"},{"size":789,"mtime":1640677305461,"results":"18","hashOfConfig":"12"},{"size":807,"mtime":1640677271153,"results":"19","hashOfConfig":"12"},{"size":204,"mtime":1640676351594,"results":"20","hashOfConfig":"12"},{"size":622,"mtime":1640688992363,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vu06u1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/index.js",[],["48","49"],"/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/reportWebVitals.js",[],"/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/App.js",[],"/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/AllUsers.jsx",["50","51"],"import react, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { getUsers, deleteUser } from '../Service/api';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    }\n})\n\n\nconst AllUsers = () => {\n    const [users, setUsers] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllUsers();\n    }, []);\n\n    const deleteUserData = async (id) => {\n        await deleteUser(id);\n        getAllUsers();\n    }\n\n    const getAllUsers = async () => {\n        let response = await getUsers();\n        setUsers(response.data);\n    }\n\n    return (\n        <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>Id</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Username</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {users.map((user) => (\n                    <TableRow className={classes.row} key={user.id}>\n                        <TableCell>{user._id}</TableCell> {/* change it to user.id to use JSON Server */}\n                        <TableCell>{user.name}</TableCell>\n                        <TableCell>{user.username}</TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>{user.phone}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:10}} component={Link} to={`/edit/${user._id}`}>Edit</Button> {/* change it to user.id to use JSON Server */}\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteUserData(user._id)}>Delete</Button> {/* change it to user.id to use JSON Server */}\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    )\n}\n\nexport default AllUsers;","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/AddUser.jsx",["52"],"import react, { useState } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { addUser } from '../Service/api';\nimport { useHistory } from 'react-router-dom';\n\nconst initialValue = {\n    name: '',\n    username: '',\n    email: '',\n    phone: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst AddUser = () => {\n    const [user, setUser] = useState(initialValue);\n    const { name, username, email, phone } = user;\n    const classes = useStyles();\n    let history = useHistory();\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setUser({...user, [e.target.name]: e.target.value})\n    }\n\n    const addUserDetails = async() => {\n        await addUser(user);\n        alert(\"success\")\n        history.push('./all');\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Add User</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Email</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\"/>\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Phone</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => addUserDetails()}>Add User</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default AddUser;","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/EditUser.jsx",["53","54"],"import { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getUsers, editUser } from '../Service/api';\n\nconst initialValue = {\n    name: '',\n    username: '',\n    email: '',\n    phone: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst EditUser = () => {\n    const [user, setUser] = useState(initialValue);\n    const { name, username, email, phone } = user;\n    const { id } = useParams();\n    const classes = useStyles();\n    let history = useHistory();\n\n    useEffect(() => {\n        loadUserDetails();\n    }, []);\n\n    const loadUserDetails = async() => {\n        const response = await getUsers(id);\n        setUser(response.data);\n    }\n\n    const editUserDetails = async() => {\n        const response = await editUser(id, user);\n        history.push('/all');\n    }\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setUser({...user, [e.target.name]: e.target.value})\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Email</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Phone</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => editUserDetails()}>Edit User</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default EditUser;","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/NavBar.jsx",[],"/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/CodeForInterview.jsx",["55","56"],"import { Box, Typography, makeStyles } from '@material-ui/core';\nimport Youtube from '../Assets/Images/youtube.png';\nimport InstaTele from '../Assets/Images/InstaTele.jpeg';\n\nconst useStyles = makeStyles({\n    component: {\n        margin: 50,\n        '& > *': {\n            marginTop: 50\n        }\n    },\n    image: {\n        width: '50%',\n        height: '50%'\n    }\n})\n\nconst CodeForInterview = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.component}>\n            <Typography variant=\"h4\">Home</Typography>\n            <Box style={{display: 'flex'}}>\n                {/* <img src={Youtube} className={classes.image} />\n                <img src={InstaTele} className={classes.image} /> */}\n            </Box>\n        </Box>\n    )\n}\n\nexport default CodeForInterview;","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Component/NotFound.jsx",["57"],"import notfound from '../Assets/Images/NotFound.jpg';\n\nconst NotFound = () => {\n    return (\n        <img src={notfound}  style={{width: '30%', margin: '80px 0 0 35%'}}/>\n    )\n}\n\nexport default NotFound;","/home/amit/Documents/amit project/crud mern/MERN-Stack-Projects/CRUD-Application/crud-app/src/Service/api.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":2,"column":39,"nodeType":"64","messageId":"65","endLine":2,"endColumn":44},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":32,"column":8,"nodeType":"69","endLine":32,"endColumn":10,"suggestions":"70"},{"ruleId":"62","severity":1,"message":"71","line":40,"column":15,"nodeType":"64","messageId":"65","endLine":40,"endColumn":23},{"ruleId":"62","severity":1,"message":"72","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":15},{"ruleId":"62","severity":1,"message":"73","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":5,"column":9,"nodeType":"76","endLine":5,"endColumn":78},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserDetails'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'response' is assigned a value but never used.","'Youtube' is defined but never used.","'InstaTele' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [loadUserDetails]",{"range":"82","text":"83"},[802,804],"[loadUserDetails]"]